name: Deploy to production

on:
    push:
        branches:
            - master


jobs:
    build-and-deploy:
        runs-on: ubuntu-latest

        steps:

        - name: Checkout code
          uses: action/checkout@v3
        
        - name: Build frontend image 
          run: docker-compose -f docker-compose.prod.yml build
        - name: Save Frontend image
          run: docker save frontend:latest -o frontend.tar
        - name: Save API Image
          run: docker save api:latest -o api.tar
        - name: Save AI Image
          run: docker save ai:latest -o ai.tar

        - name: Setup SSH
          run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_REMOTE_IP }} >> ~/.ssh/known_hosts

        - name: Install rsync
          run: sudo apt-get install -y rsync
        - name: Deploy via rsync
          run: |
            rsync -avz --no-times --no-perms --no-group -e "ssh -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no" frontend.tar api.tar ai.tar docker-compose.prod.yml ${{secrets.SSH_USER}}@${{secrets.SSH_REMOTE_IP}}:${{secrets.SSH_BACKEND_REMOTE_PATH}}

        - name: Deploy container
          run: |
            ssh -o StrictHostKeyChecking=no -p ${{secrets.SSH_PORT}} ${{secrets.SSH_USER}}@${{secrets.SSH_REMOTE_IP}} << 'EOF'
            cd ${{secrets.SSH_BACKEND_REMOTE_PATH}}
            docker-compose down -v || true
            docker load -i frontend.tar
            docker load -i api.tar
            docker load -i ai.tar
            rm -f frontend.tar api.tar ai.tar
            docker-compose -f docker-compose.prod.yml up -d 
            docker system prune -f 


            
            
          